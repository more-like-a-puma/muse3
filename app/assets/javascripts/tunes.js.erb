var app = app || {};
app.step = 0; // base animation point

app.controller = new function () {
  this.rotationSpeed = 0.02;
  // this.bouncingSpeed = 0.02;
};

app.animate = function () {
  app.stats.update();

  // app.step += app.controller.bouncingSpeed;
  // app.sphere.position.x = 20 + (10 *(Math.cos(app.step)));
  // app.sphere.position.y = 2 + (10 * (Math.abs(Math.sin(app.step))));

  app.cube.rotation.x += app.controller.rotationSpeed;
  app.cube.rotation.y += app.controller.rotationSpeed;
  app.cube.rotation.z += app.controller.rotationSpeed;

  app.cube1.rotation.x += app.controller.rotationSpeed;
  app.cube1.rotation.y += app.controller.rotationSpeed;
  app.cube1.rotation.z += app.controller.rotationSpeed;

  app.cube2.rotation.x += app.controller.rotationSpeed;
  app.cube2.rotation.y += app.controller.rotationSpeed;
  app.cube2.rotation.z += app.controller.rotationSpeed;

  app.cube3.rotation.x += app.controller.rotationSpeed;
  app.cube3.rotation.y += app.controller.rotationSpeed;
  app.cube3.rotation.z += app.controller.rotationSpeed;

  requestAnimationFrame( app.animate );
  app.renderer.render( app.scene, app.camera );
};

app.addStats = function () {
  var stats = new Stats();
  stats.setMode(0);
  // stats.domElement.style.position = "absolute";
  // stats.domElement.style.top = "0px";
  // stats.domElement.style.left = "0px";
  // document.getElementById("stats").appendChild( stats.domElement );

  return stats;
};

app.init = function () {
  // Scene keeps track of all of the shapes on the screen
  app.scene = new THREE.Scene();
  // Keep track of the width and the height
  app.width = window.innerWidth;
  app.height = window.innerHeight;

  // angle, aspect ratio, near, far
  app.camera = new THREE.PerspectiveCamera(90, app.width / app.height, 0.1, 20000 );
  app.camera.position.x = -30;
  app.camera.position.y = 40;
  app.camera.position.z = 30;
  app.camera.lookAt( app.scene.position );

  app.renderer = new THREE.WebGLRenderer();
  app.renderer.shadowMap.enabled = true;
  app.renderer.setPixelRatio( window.devicePixelRatio || 1 );
  app.renderer.setSize( app.width, app.height );
  // app.renderer.setClearColor( 0xECEFF1 );

  // app.axes = new THREE.AxisHelper( 40 );
  // app.scene.add( app.axes );

  // var imagePrefix = "./images/";
	var directions  = ["<%= asset_path('xpos.jpg') %>", "<%= asset_path('xneg.jpg') %>", "<%= asset_path('ypos.jpg') %>", "<%= asset_path('yneg.jpg') %>", "<%= asset_path('zpos.jpg') %>", "<%= asset_path('zneg.jpg') %>"];
	// var imageSuffix = ".jpg";
	var skyGeometry = new THREE.CubeGeometry( 5000, 5000, 5000 );

	var materialArray = [];
  var textureLoader = new THREE.TextureLoader();
	for (var i = 0; i < 6; i++) {
		materialArray.push( new THREE.MeshBasicMaterial({
			map: textureLoader.load( directions[i] ),
			side: THREE.BackSide
		}))
    materialArray.forEach(function(direction, i) {
        materialArray[i].side = THREE.BackSide
    })
  };
	var skyMaterial = new THREE.MeshFaceMaterial( materialArray );
	var skyBox = new THREE.Mesh( skyGeometry, skyMaterial );
	app.scene.add( skyBox );

  var planeGeometry = new THREE.PlaneGeometry(150, 150);
  var planeMaterial = new THREE.MeshLambertMaterial({
    color: 0x202010
  });
  app.plane = new THREE.Mesh(planeGeometry, planeMaterial);
  app.plane.rotation.x = -0.5 * Math.PI;
  app.plane.position.x = 0;
  app.plane.position.y = -2;
  app.plane.position.z = 0;
  app.plane.receiveShadow = true;
  app.scene.add(app.plane);

  var cubeGeometry = new THREE.BoxGeometry(4, 4, 4);
  var cubeMaterial = new THREE.MeshLambertMaterial({
    color: 0xD32F21,
    // wireframe: true
  });
  app.cube = new THREE.Mesh( cubeGeometry, cubeMaterial );
  app.cube.position.x = -2;
  app.cube.position.y = 1;
  app.cube.position.z = 0;
  app.cube.castShadow = true;
  app.scene.add( app.cube );

  var cubeGeometry1 = new THREE.BoxGeometry(4, 4, 4);
  var cubeMaterial1 = new THREE.MeshLambertMaterial({
    color: 0xD32F2F,
    // wireframe: true
  });
  app.cube1 = new THREE.Mesh( cubeGeometry1, cubeMaterial1 );
  app.cube1.position.x = -10;
  app.cube1.position.y = 1;
  app.cube1.position.z = 0;
  app.cube1.castShadow = true;
  app.scene.add( app.cube1 );

  var cubeGeometry2 = new THREE.BoxGeometry(4, 4, 4);
  var cubeMaterial2 = new THREE.MeshLambertMaterial({
    color: 0xD32F49,
    // wireframe: true
  });
  app.cube2 = new THREE.Mesh( cubeGeometry2, cubeMaterial2 );
  app.cube2.position.x = 6;
  app.cube2.position.y = 1;
  app.cube2.position.z = 0;
  app.cube2.castShadow = true;
  app.scene.add( app.cube2 );

  var cubeGeometry3 = new THREE.BoxGeometry(4, 4, 4);
  var cubeMaterial3 = new THREE.MeshLambertMaterial({
    color: 0xD32F10,
    // wireframe: true
  });
  app.cube3 = new THREE.Mesh( cubeGeometry3, cubeMaterial3 );
  app.cube3.position.x = 14;
  app.cube3.position.y = 1;
  app.cube3.position.z = 0;
  app.cube3.castShadow = true;
  app.scene.add( app.cube3 );


  app.pointLight = new THREE.PointLight( 0xFFFFFF );
  app.pointLight.position.set( 15, 30, 10 );
  app.pointLight.castShadow = true;
  app.pointLight.shadow.mapSize.width = 2048;
  app.pointLight.shadow.mapSize.height = 2048;
  app.pointLight.shadow.camera.near = 1;
  app.pointLight.shadow.camera.far = 50;
  app.scene.add( app.pointLight );

  app.controls = new THREE.OrbitControls( app.camera, app.renderer.domElement );

  var target = document.getElementById("output");
  target.appendChild( app.renderer.domElement );
  app.renderer.render( app.scene, app.camera );

  app.stats = app.addStats();
  app.animate();

  // app.gui = new dat.GUI();
  // app.gui.add(app.controller, 'rotationSpeed', 0, 0.2);
};

window.onload = app.init;

app.resize = function () {
  app.width = window.innerWidth;
  app.height = window.innerHeight;
  app.camera.aspect = app.width / app.height;
  app.camera.updateProjectionMatrix();
  app.renderer.setSize(app.width, app.height);
};

window.addEventListener( "resize", app.resize );
